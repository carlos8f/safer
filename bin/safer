#!/usr/bin/env node
var cryptic = require('cryptic')
  , cmd = require('commander')

cmd
  .version(require('../package.json').version)
  .usage('<in_file> <out_file>')
  .option('-u, --unsafe', 'decrypt instead of encrypt')
  .option('-p, --passphrase <passphrase>', 'passphrase (default is to prompt for passphrase)')
  .parse(process.argv)

if (cmd.args.length !== 2) {
  cmd.outputHelp();
  process.exit(1);
}

if (cmd.passphrase) doCommand(cmd.passphrase)
else cmd.password('passphrase: ', doCommand);

function onErr (err) {
  if (err) {
    console.error('Error: ' + err.message);
    process.exit(1);
  }
}

function doCommand (passphrase) {
  cryptic.fromFile(passphrase, cmd.args[0], function (err, c) {
    if (err) onErr(err);
    try {
      cmd.unsafe ? c.decrypt() : c.encrypt();
    }
    catch (e) {
      onErr(e);
    }
    c.toFile(cmd.args[1], onErr);
  });
}
